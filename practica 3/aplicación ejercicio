#include <iostream>
#include <fstream>
#include <string.h>
#include <string>
#include <math.h>

using namespace std;
void conver(char* a,int j,int *c);
void metodo1(int* c,int f,int s);
void metodo2(int* c,int *h,int f,int s);
void decodificador1(int *c,int f,int s);
void decodificador2(int* c,int *h,int f,int s);
void deco(int *c,char *b,int i);
bool esvalido(string pl);
int numero();
int numeroad();
bool esvalidoad(string pl);
int userexis(string b,string ncc);

int main()
{
    ofstream fout;
    ifstream fin;
    string sd,nj,finn;
    sd="sudo.txt";
    try {

            char *jk;jk=new char [800];
            fin.open(sd); // abrir una archivo para lectura
            if(!fin.is_open())
                throw '2';
            int i=0;
            while(!fin.eof()){
                char temp=fin.get();
                jk[i]=temp;
                i++;
            }
            i--;
            fin.close();
            int fg,f=i/8,s;
            fg=1; //metodo codificacion
            s=12; //numero de particion de archivo
            int *c=NULL;c=new int [i];
            int *h=NULL;h=new int [i];
            for(int hj=0;hj<i;hj++)
                c[hj]=jk[hj]-48;
            if(fg==1){
                decodificador1(c,i,s);
                for(int y=0;y<i;y++){
                    h[y]=c[y];
                }
            }
            else
                decodificador2(c,h,i,s);
            fout.open("prueba.txt");
            char *b;b=new char [f];
            deco(h,b,f);
            fout.close();
            string cc,ncc,finn;
            for(int t=0;t<f;t++)
                finn+=b[t];
            cout<<"Ingrese usuario :";
            cin>>ncc;
            bool w=1,ty=1;
            for(int y=0;y<f;y++){
                if(b[y]==44){
                    if(cc==ncc){
                        ty=0;
                        break;
                    }

                    cc="";
                    w=0;
                }
                else if(b[y]==10)
                    w=1;
                else if(w==1){
                    cc+=b[y];
                }
            }
            if(ty)
                cout<<"Usuario no existe"<<endl;
            else{
                cc="";
                cout<<"Ingrese contrasena: ";
                cin>>ncc;
                w=0,ty=1;
                string saldo,rt;
                int ji=0;
                for(int y=0;y<f;y++){
                    if(b[y]==44){
                        if(cc==ncc){
                            ty=0;
                        }
                        cc="";
                        w=1;
                        ji++;
                     }
                     else if(b[y]==10){
                         w=1;
                         ji=0;
                     }
                     else if(w==1 and ji<2){
                         cc+=b[y];
                     }
                    else if(ty==0)
                        saldo+=b[y];
                    if(ty==0 and b[y]==10)
                        break;
                }
                if(ty)
                    cout<<"Contrasena incorrecta"<<endl;
                else{
                    if(ncc=="admin12"){
                        cout<<"Ingresaste como administrador"<<endl;
                        int pl=0;
                        while(pl!=2){
                            cout<<"Desea ingresar usuario (si/1 no/2):";
                            pl= numero();
                            if(pl==1){
                                string user;int yi=1;
                                while(yi==1){
                                    cout<<"Ingrese nombre de usuario a crear : ";
                                    cin>>user;
                                    yi=userexis(finn,user);
                                }
                                finn+=10;
                                finn+=user;
                                cout<<"Ingrese contrasena del usuario a crear : ";
                                cin>>user;
                                finn+=",";
                                finn+=user;
                                finn+=",";
                                cout<<"Ingrese dinero a depositar a usuario nuevo : ";
                                int u;
                                u= numeroad();
                                user=(std::to_string(u));
                                finn+=user;
                                rt=finn;
                            }

                        }

                    }
                else{
                    int hj=0;
                    cout<<"Consultar saldo(1),Retirar dinero(2): ";
                    int yu=numero();
                    if(yu==1){
                        hj=stoi(saldo);
                        if(hj-1000>0){
                            cout<<"Su saldo es de : "<<saldo<<endl;
                            hj-=1000;
                        }
                        else
                            cout<<"Saldo insuficiente"<<endl;
                    }
                    else{
                        hj=stoi(saldo);int ko=0;
                        while(ko<=0){
                        cout<<"Ingrese cantidad de dinero a retirar : ";
                        ko=numeroad();
                        }
                        if(ko+1000>hj)
                            cout<<"Saldo insuficiente"<<endl;
                        else{
                            hj-=ko;
                            hj-=1000;
                        }
                    }

                    ji=0;
                    cc="";
                    w=1,ty=1;
                    saldo=(std::to_string(hj));
                    for(int y=0;y<f;y++){
                        if(b[y]==44){
                            if(cc==ncc){
                                ty=0;
                            }
                            rt+=b[y];
                            cc="";
                            w=1;
                            ji++;
                         }
                         else if(b[y]==10){
                             w=1;
                             ty=1;
                             ji=0;
                             rt+=b[y];
                         }
                         else if(w==1 and ji<2){
                             rt+=b[y];
                             cc+=b[y];
                         }
                        else if(ty==0){
                            rt+=saldo;
                            ty=1;
                            w=0;
                        }
                        else if(ty==1 and ji>=2 and w==1)
                            rt+=b[y];

                    }

                    }
                }
                delete [] c;delete [] h;delete [] jk;delete [] b;
                i=rt.length();
                f=i*8;
                char *b=new char [f];
                for(int y=0;y<i;y++)
                    b[y]=rt[y];
                if(!fg)
                    throw '3';
                else if(fg<1 or fg>2)
                    throw '3';
                int *c=NULL;c=new int [f];
                int *h=NULL;h=new int [f];

                if(!fg or s<=0 or s>=f)
                    throw '3';
                conver(jk,i,c);
                if(fg==2){
                    metodo2(c,h,f,s);
                }
                else{
                   metodo1(c,f,s);
                   for(int i=0;i<f;i++){
                       h[i]=c[i];
                   }
                }
               finn="";
               nj="sudo.txt";
               fout.open(nj); //abrir o crear un archivo para escritura.
               if(!fout.is_open())
                   throw '1';
               for(int i=0;i<f;i++)
                   finn+=(h[i]-208);
               fout<<finn;
               fout.close();
               delete [] c;delete [] h;delete [] jk;

            }

           delete [] c;delete [] h;delete [] jk;delete [] b;


    }
    catch (char c) {
            if(c=='1')
               cout<<"se produjo un error con el archivo para la escritura "<<endl;
            else if(c=='2')
               cout<<"se produjo un error con el archivo para la lectura "<<endl;
            else if(c=='3')
                cout<<"valor no valido"<<endl;
            else
            cout<<"se produjo un error inexperado"<<endl;
        }
    return 0;
}
void conver(char *a,int j,int *c){
    for(int k=0;k<j;k++){
        for(int i=7;i>=0;i--){
            c[i+(8*k)]=a[k]%2;
            a[k]=a[k]/2;
        }
    }
}
void metodo1(int *c,int f,int s){
int contador0=0,contador1=0,stop=0,gh=1;
bool ft=1;
for(int i=0;i<f;i++){
    if(i%s==0){
        if(contador0>contador1){
            stop=2;
            ft=0;
        }
        else if(contador1>contador0){
            stop=3;
            ft=0;
        }
        else{
            stop=0;
            ft=1;
        }
        contador0=0;
        contador1=0;
        gh=1;
    }
    if(c[i]==1 and ft==1){
        c[i]=0;
        contador1++;
        ft=0;
        gh=0;
    }
    else if(c[i]==0 and ft==1){
        c[i]=1;
        contador0++;
        ft=0;
        gh=0;
    }
    else{
        if(c[i]==0)
            contador0++;
        else
            contador1++;
    }
    gh++;
    if(gh>=stop){
        ft=1;
        gh=1;
    }
}
}
void metodo2(int* c,int *h,int f,int s){
    int nm=1;
    for(int i=0;i<f;i++){
        if(i%s==0 and (s*nm)<=(f-f%s)){
            h[i]=c[(s*nm)-1];
            nm++;
        }
        else if(i%s==0 and (s*nm)>(f-f%s)){
            h[i]=c[f-1];
        }
        else
            h[i]=c[i-1];
    }
}
void decodificador1(int *c,int f,int s){
    int contador0=0,contador1=0,stop=0,gh=1;
    bool ft=1;
    for(int i=0;i<f;i++){
        if(i%s==0){
            if(contador0>contador1){
                stop=2;
                ft=0;
            }
            else if(contador1>contador0){
                stop=3;
                ft=0;
            }
            else{
                stop=0;
                ft=1;
            }
            contador0=0;
            contador1=0;
            gh=1;
        }
        if(c[i]==1 and ft==1){
            c[i]=0;
            contador0++;
            ft=0;
            gh=0;
        }
        else if(c[i]==0 and ft==1){
            c[i]=1;
            contador1++;
            ft=0;
            gh=0;
        }
        else{
            if(c[i]==0)
                contador0++;
            else
                contador1++;
        }
        gh++;
        if(gh>=stop){
            ft=1;
            gh=1;
        }
    }
}
void deco(int *c,char *b,int i){
    int l=0,f=0;
    for(int k=0;k<i;k++){
        l=0;
        for(int j=0,h=7;j<8;j++,h--){
            f=pow(2,h);
            l+=c[j+(8*k)]*f;

        }
        b[k]=l;
    }
}
void decodificador2(int* c,int *h,int f,int s){
    int nm=1;
    for(int i=0;i<f;i++){
        if((i+1)%s==0 and (s*nm)<=(f-f%s)){
            h[i]=c[(s*nm)-s];
            nm++;
        }
        else if(i+1==f)
            h[i]=c[f-f%s];
        else
            h[i]=c[i+1];
    }
}
bool esvalido(string pl){
    if(pl.length()==0)
        return 0;
    for(int i=0;i<pl.length();i++){
        if(!isdigit(pl[i]))
            return 0;
    }
    if(pl!="2" and pl!="1")
        return 0;
    return 1;
}
int numero(){
    string pl;
    bool valido=false;
    while(!valido){
        try {

            getline(cin,pl);
            valido= esvalido(pl);
            if(!valido)
                throw 1;

        }  catch (int g) {
            if(g==1)
                cout<<"valor no valido"<<endl;
        }
    }
    return atoi(pl.c_str());
}
int numeroad(){
    string pl;
    bool valido=false;
    while(!valido){
        try {
            getline(cin,pl);
            valido= esvalidoad(pl);
            if(!valido)
                throw 1;

        }  catch (int g) {
            if(g==1)
                cout<<"valor no valido"<<endl;
        }
    }
    return atoi(pl.c_str());

}
bool esvalidoad(string pl){
    if(pl.length()==0)
        return 0;
    for(int i=0;i<pl.length();i++){
        if(!isdigit(pl[i]))
            return 0;
    }
    if(pl<="0")
        return 0;
    return 1;
}
int userexis(string b,string ncc){
    string cc;
    int f=b.length();
    bool w=1,ty=1;
    for(int y=0;y<f;y++){
        if(b[y]==44){
            if(cc==ncc){
                ty=0;
                break;
            }

            cc="";
            w=0;
        }
        else if(b[y]==10)
            w=1;
        else if(w==1){
            cc+=b[y];
        }
    }
    if(ty==0){
        cout<<"Usuario ya existente"<<endl;
        return 1;
    }
    return 0;
}
