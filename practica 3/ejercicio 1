#include <iostream>
#include <fstream>
#include <string.h>
#include <math.h>

using namespace std;
void conver(char* a,int j,int *c);
void metodo1(int* c,int f,int s);
void metodo2(int* c,int *h,int f,int s);
void decodificador1(int *c,int f,int s);
void decodificador2(int* c,int *h,int f,int s);
void deco(int *c,char *b,int i);

int main()
{
    char *jk=NULL;jk=new char[100];
    ofstream fout;
    ifstream fin;
    string sd,nj,finn;
    cout<<"ingrese nombre de archivoa a leer: "<<endl;
    cin>>sd;
    sd=sd+".txt";
    try {

            fin.open(sd); // abrir una archivo para lectura
            if(!fin.is_open())
                throw '2';
            fin.getline(jk,100);
            fin.close();
            int i=0;
            while(jk[i]!=0){
                i++;
            }
            int fg,f=i*8,s;
            cout<<"ingrese metodo de 1 0 2:";
            cin>>fg;
            if(!fg)
                throw '3';
            else if(fg<1 or fg>2)
                throw '3';
            int *c=NULL;c=new int [f];
            int *h=NULL;h=new int [f];
            cout<<"ingrese numero para separar :";
            cin>>s;
            if(!fg or s<=0 or s>=f)
                throw '3';
            conver(jk,i,c);
            if(fg==2){
                metodo2(c,h,f,s);
            }
            else{
               metodo1(c,f,s);
               for(int i=0;i<f;i++){
                   h[i]=c[i];
               }
            }
           cout<<"ingrese nombre de archivo a crear"<<endl;
           cin>>nj;
           nj=nj+".txt";
           fout.open(nj); //abrir o crear un archivo para escritura.
           if(!fout.is_open())
               throw '1';
           for(int i=0;i<f;i++)
               finn+=(h[i]-208);
           fout<<finn;
           fout.close();
           delete [] c;delete [] h;delete [] jk;
           int sl;
           cout<<"Desea decodificar el archivo (1/si 2/no)";
           cin>>sl;
           if(!sl)
               throw '3';
           else if(sl<1 or sl>2)
               throw '3';
           if(sl==1){
               fin.open(nj); // abrir una archivo para lectura
               if(!fin.is_open())
                   throw '2';
               char *gl;gl=new char [f+2];
               fin.getline(gl,f+2);
               fin.close();
               int *c;c=new int [f];
               int *h;h=new int [f];
               for(int i=0;i<f;i++){
                   c[i]=gl[i]-48;
               }
               if(fg==1){
                   decodificador1(c,f,s);
                   for(int i=0;i<f;i++){
                       h[i]=c[i];
                   }
               }
               else{
                   decodificador2(c,h,f,s);

               }
               fout.open("prueba.txt");
               char *b;b=new char [i];
               deco(h,b,i);
               string ji;
               for(int y=0;y<i;y++)
                   ji+=b[y];
               fout<<ji;
               fout.close();
               delete [] gl;delete [] c;delete [] b;delete [] h;
           }

    }
    catch (char c) {
            if(c=='1')
               cout<<"se produjo un error con el archivo para la escritura "<<endl;
            else if(c=='2')
               cout<<"se produjo un error con el archivo para la lectura "<<endl;
            else if(c=='3')
                cout<<"valor no valido"<<endl;
            else
            cout<<"se produjo un error inexperado"<<endl;
        }
    return 0;
}
void conver(char *a,int j,int *c){
    for(int k=0;k<j;k++){
        for(int i=7;i>=0;i--){
            c[i+(8*k)]=a[k]%2;
            a[k]=a[k]/2;
        }
    }
}
void metodo1(int *c,int f,int s){
int contador0=0,contador1=0,stop=0,gh=1;
bool ft=1;
for(int i=0;i<f;i++){
    if(i%s==0){
        if(contador0>contador1){
            stop=2;
            ft=0;
        }
        else if(contador1>contador0){
            stop=3;
            ft=0;
        }
        else{
            stop=0;
            ft=1;
        }
        contador0=0;
        contador1=0;
        gh=1;
    }
    if(c[i]==1 and ft==1){
        c[i]=0;
        contador1++;
        ft=0;
        gh=0;
    }
    else if(c[i]==0 and ft==1){
        c[i]=1;
        contador0++;
        ft=0;
        gh=0;
    }
    else{
        if(c[i]==0)
            contador0++;
        else
            contador1++;
    }
    gh++;
    if(gh>=stop){
        ft=1;
        gh=1;
    }
}
}
void metodo2(int* c,int *h,int f,int s){
    int nm=1;
    for(int i=0;i<f;i++){
        if(i%s==0 and (s*nm)<=(f-f%s)){
            h[i]=c[(s*nm)-1];
            nm++;
        }
        else if(i%s==0 and (s*nm)>(f-f%s)){
            h[i]=c[f-1];
        }
        else
            h[i]=c[i-1];
    }
}
void decodificador1(int *c,int f,int s){
    int contador0=0,contador1=0,stop=0,gh=1;
    bool ft=1;
    for(int i=0;i<f;i++){
        if(i%s==0){
            if(contador0>contador1){
                stop=2;
                ft=0;
            }
            else if(contador1>contador0){
                stop=3;
                ft=0;
            }
            else{
                stop=0;
                ft=1;
            }
            contador0=0;
            contador1=0;
            gh=1;
        }
        if(c[i]==1 and ft==1){
            c[i]=0;
            contador0++;
            ft=0;
            gh=0;
        }
        else if(c[i]==0 and ft==1){
            c[i]=1;
            contador1++;
            ft=0;
            gh=0;
        }
        else{
            if(c[i]==0)
                contador0++;
            else
                contador1++;
        }
        gh++;
        if(gh>=stop){
            ft=1;
            gh=1;
        }
    }
}
void deco(int *c,char *b,int i){
    int l=0,f=0;
    for(int k=0;k<i;k++){
        l=0;
        for(int j=0,h=7;j<8;j++,h--){
            f=pow(2,h);
            l+=c[j+(8*k)]*f;

        }
        b[k]=l;
    }
}
void decodificador2(int* c,int *h,int f,int s){
    int nm=1;
    for(int i=0;i<f;i++){
        if((i+1)%s==0 and (s*nm)<=(f-f%s)){
            h[i]=c[(s*nm)-s];
            nm++;
        }
        else if(i+1==f)
            h[i]=c[f-f%s];
        else
            h[i]=c[i+1];
    }
}
